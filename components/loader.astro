---
let {
  className,
  style,
  colors = {
    dark: "#343a40",
    medium: "#6c757d",
    light: "#e9ecef",
  },
} = Astro.props;

let props = {
  "class:list": ["loader", className],
  "data-state": "not-loaded",
  style,
};

let vars = { ...colors };
---

<div {...props}>
  <div class="loader-icon"></div>
  <div class="loader-icon"></div>
  <div class="loader-icon"></div>
  <div class="loader-icon"></div>
  <div class="loader-icon"></div>
  <div class="loader-icon"></div>
</div>

<style lang="scss" define:vars={vars}>
  @use "#mixins" as *;

  $offset: 0.875rem;
  $animation-setup: 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;

  @mixin loading-icon($size: 0.75rem) {
    vertical-align: middle;
    display: inline-block;
    border-radius: 50%;
    position: absolute;
    height: $size;
    width: $size;
    content: "";
  }

  .loader {
    padding: toRem(4);
    height: toRem(52);
    width: toRem(170);

    &[data-state="loaded"] {
      display: none;
    }
  }

  .loader-icon {
    vertical-align: middle;
    display: inline-block;
    position: relative;

    &:not(:last-child) {
      margin-right: $offset * 1.75;
    }

    &:before {
      @include loading-icon;
      background-color: var(--dark);
      animation: animation-before $animation-setup;
    }

    &:after {
      @include loading-icon;
      background-color: var(--medium);
      animation: animation-after $animation-setup;
    }

    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        &:before,
        &:after {
          animation-delay: #{$i * 0.2}s;
        }
      }
    }
  }

  @keyframes animation-before {
    0% {
      top: -$offset;
      z-index: 2;
    }
    25% {
      transform: scale(1.25);
      z-index: 2;
    }
    50% {
      top: $offset;
      z-index: 1;
    }
    75% {
      transform: scale(0.75);
      z-index: 1;
    }
    100% {
      top: -$offset;
      z-index: 2;
    }
  }

  @keyframes animation-after {
    0% {
      top: $offset;
      z-index: 1;
    }
    25% {
      background-color: var(--light);
      transform: scale(0.75);
      z-index: 1;
    }
    50% {
      top: -$offset;
      z-index: 2;
    }
    75% {
      transform: scale(1.25);
      z-index: 2;
    }
    100% {
      top: $offset;
      z-index: 2;
    }
  }
</style>
